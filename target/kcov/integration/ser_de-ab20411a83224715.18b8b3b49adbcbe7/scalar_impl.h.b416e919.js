var data = {lines:[
{"lineNum":"    1","line":"/**********************************************************************"},
{"lineNum":"    2","line":" * Copyright (c) 2014 Pieter Wuille                                   *"},
{"lineNum":"    3","line":" * Distributed under the MIT software license, see the accompanying   *"},
{"lineNum":"    4","line":" * file COPYING or http://www.opensource.org/licenses/mit-license.php.*"},
{"lineNum":"    5","line":" **********************************************************************/"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"#ifndef SECP256K1_SCALAR_IMPL_H"},
{"lineNum":"    8","line":"#define SECP256K1_SCALAR_IMPL_H"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#include \"group.h\""},
{"lineNum":"   11","line":"#include \"scalar.h\""},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#if defined HAVE_CONFIG_H"},
{"lineNum":"   14","line":"#include \"libsecp256k1-config.h\""},
{"lineNum":"   15","line":"#endif"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"#if defined(EXHAUSTIVE_TEST_ORDER)"},
{"lineNum":"   18","line":"#include \"scalar_low_impl.h\""},
{"lineNum":"   19","line":"#elif defined(USE_SCALAR_4X64)"},
{"lineNum":"   20","line":"#include \"scalar_4x64_impl.h\""},
{"lineNum":"   21","line":"#elif defined(USE_SCALAR_8X32)"},
{"lineNum":"   22","line":"#include \"scalar_8x32_impl.h\""},
{"lineNum":"   23","line":"#else"},
{"lineNum":"   24","line":"#error \"Please select scalar implementation\""},
{"lineNum":"   25","line":"#endif"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"#ifndef USE_NUM_NONE"},
{"lineNum":"   28","line":"static void secp256k1_scalar_get_num(secp256k1_num *r, const secp256k1_scalar *a) {"},
{"lineNum":"   29","line":"    unsigned char c[32];"},
{"lineNum":"   30","line":"    secp256k1_scalar_get_b32(c, a);"},
{"lineNum":"   31","line":"    secp256k1_num_set_bin(r, c, 32);"},
{"lineNum":"   32","line":"}"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"/** secp256k1 curve order, see secp256k1_ecdsa_const_order_as_fe in ecdsa_impl.h */"},
{"lineNum":"   35","line":"static void secp256k1_scalar_order_get_num(secp256k1_num *r) {"},
{"lineNum":"   36","line":"#if defined(EXHAUSTIVE_TEST_ORDER)"},
{"lineNum":"   37","line":"    static const unsigned char order[32] = {"},
{"lineNum":"   38","line":"        0,0,0,0,0,0,0,0,"},
{"lineNum":"   39","line":"        0,0,0,0,0,0,0,0,"},
{"lineNum":"   40","line":"        0,0,0,0,0,0,0,0,"},
{"lineNum":"   41","line":"        0,0,0,0,0,0,0,EXHAUSTIVE_TEST_ORDER"},
{"lineNum":"   42","line":"    };"},
{"lineNum":"   43","line":"#else"},
{"lineNum":"   44","line":"    static const unsigned char order[32] = {"},
{"lineNum":"   45","line":"        0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,"},
{"lineNum":"   46","line":"        0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,"},
{"lineNum":"   47","line":"        0xBA,0xAE,0xDC,0xE6,0xAF,0x48,0xA0,0x3B,"},
{"lineNum":"   48","line":"        0xBF,0xD2,0x5E,0x8C,0xD0,0x36,0x41,0x41"},
{"lineNum":"   49","line":"    };"},
{"lineNum":"   50","line":"#endif"},
{"lineNum":"   51","line":"    secp256k1_num_set_bin(r, order, 32);"},
{"lineNum":"   52","line":"}"},
{"lineNum":"   53","line":"#endif"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"static void secp256k1_scalar_inverse(secp256k1_scalar *r, const secp256k1_scalar *x) {","class":"lineCov","hits":"1","order":"4781","possible_hits":"1",},
{"lineNum":"   56","line":"#if defined(EXHAUSTIVE_TEST_ORDER)"},
{"lineNum":"   57","line":"    int i;"},
{"lineNum":"   58","line":"    *r = 0;"},
{"lineNum":"   59","line":"    for (i = 0; i < EXHAUSTIVE_TEST_ORDER; i++)"},
{"lineNum":"   60","line":"        if ((i * *x) % EXHAUSTIVE_TEST_ORDER == 1)"},
{"lineNum":"   61","line":"            *r = i;"},
{"lineNum":"   62","line":"    /* If this VERIFY_CHECK triggers we were given a noninvertible scalar (and thus"},
{"lineNum":"   63","line":"     * have a composite group order; fix it in exhaustive_tests.c). */"},
{"lineNum":"   64","line":"    VERIFY_CHECK(*r != 0);"},
{"lineNum":"   65","line":"}"},
{"lineNum":"   66","line":"#else"},
{"lineNum":"   67","line":"    secp256k1_scalar *t;"},
{"lineNum":"   68","line":"    int i;"},
{"lineNum":"   69","line":"    /* First compute xN as x ^ (2^N - 1) for some values of N,"},
{"lineNum":"   70","line":"     * and uM as x ^ M for some values of M. */"},
{"lineNum":"   71","line":"    secp256k1_scalar x2, x3, x6, x8, x14, x28, x56, x112, x126;"},
{"lineNum":"   72","line":"    secp256k1_scalar u2, u5, u9, u11, u13;"},
{"lineNum":"   73","line":""},
{"lineNum":"   74","line":"    secp256k1_scalar_sqr(&u2, x);","class":"lineCov","hits":"1","order":"4782","possible_hits":"1",},
{"lineNum":"   75","line":"    secp256k1_scalar_mul(&x2, &u2,  x);","class":"lineCov","hits":"1","order":"4861","possible_hits":"1",},
{"lineNum":"   76","line":"    secp256k1_scalar_mul(&u5, &u2, &x2);","class":"lineCov","hits":"1","order":"4894","possible_hits":"1",},
{"lineNum":"   77","line":"    secp256k1_scalar_mul(&x3, &u5,  &u2);","class":"lineCov","hits":"1","order":"4895","possible_hits":"1",},
{"lineNum":"   78","line":"    secp256k1_scalar_mul(&u9, &x3, &u2);","class":"lineCov","hits":"1","order":"4896","possible_hits":"1",},
{"lineNum":"   79","line":"    secp256k1_scalar_mul(&u11, &u9, &u2);","class":"lineCov","hits":"1","order":"4897","possible_hits":"1",},
{"lineNum":"   80","line":"    secp256k1_scalar_mul(&u13, &u11, &u2);","class":"lineCov","hits":"1","order":"4898","possible_hits":"1",},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"    secp256k1_scalar_sqr(&x6, &u13);","class":"lineCov","hits":"1","order":"4899","possible_hits":"1",},
{"lineNum":"   83","line":"    secp256k1_scalar_sqr(&x6, &x6);","class":"lineCov","hits":"1","order":"4900","possible_hits":"1",},
{"lineNum":"   84","line":"    secp256k1_scalar_mul(&x6, &x6, &u11);","class":"lineCov","hits":"1","order":"4901","possible_hits":"1",},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"    secp256k1_scalar_sqr(&x8, &x6);","class":"lineCov","hits":"1","order":"4902","possible_hits":"1",},
{"lineNum":"   87","line":"    secp256k1_scalar_sqr(&x8, &x8);","class":"lineCov","hits":"1","order":"4903","possible_hits":"1",},
{"lineNum":"   88","line":"    secp256k1_scalar_mul(&x8, &x8,  &x2);","class":"lineCov","hits":"1","order":"4904","possible_hits":"1",},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"    secp256k1_scalar_sqr(&x14, &x8);","class":"lineCov","hits":"1","order":"4905","possible_hits":"1",},
{"lineNum":"   91","line":"    for (i = 0; i < 5; i++) {","class":"lineCov","hits":"2","order":"4906","possible_hits":"2",},
{"lineNum":"   92","line":"        secp256k1_scalar_sqr(&x14, &x14);","class":"lineCov","hits":"1","order":"4907","possible_hits":"1",},
{"lineNum":"   93","line":"    }"},
{"lineNum":"   94","line":"    secp256k1_scalar_mul(&x14, &x14, &x6);","class":"lineCov","hits":"1","order":"4908","possible_hits":"1",},
{"lineNum":"   95","line":""},
{"lineNum":"   96","line":"    secp256k1_scalar_sqr(&x28, &x14);","class":"lineCov","hits":"1","order":"4909","possible_hits":"1",},
{"lineNum":"   97","line":"    for (i = 0; i < 13; i++) {","class":"lineCov","hits":"2","order":"4910","possible_hits":"2",},
{"lineNum":"   98","line":"        secp256k1_scalar_sqr(&x28, &x28);","class":"lineCov","hits":"1","order":"4911","possible_hits":"1",},
{"lineNum":"   99","line":"    }"},
{"lineNum":"  100","line":"    secp256k1_scalar_mul(&x28, &x28, &x14);","class":"lineCov","hits":"1","order":"4912","possible_hits":"1",},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":"    secp256k1_scalar_sqr(&x56, &x28);","class":"lineCov","hits":"1","order":"4913","possible_hits":"1",},
{"lineNum":"  103","line":"    for (i = 0; i < 27; i++) {","class":"lineCov","hits":"2","order":"4914","possible_hits":"2",},
{"lineNum":"  104","line":"        secp256k1_scalar_sqr(&x56, &x56);","class":"lineCov","hits":"1","order":"4915","possible_hits":"1",},
{"lineNum":"  105","line":"    }"},
{"lineNum":"  106","line":"    secp256k1_scalar_mul(&x56, &x56, &x28);","class":"lineCov","hits":"1","order":"4916","possible_hits":"1",},
{"lineNum":"  107","line":""},
{"lineNum":"  108","line":"    secp256k1_scalar_sqr(&x112, &x56);","class":"lineCov","hits":"1","order":"4917","possible_hits":"1",},
{"lineNum":"  109","line":"    for (i = 0; i < 55; i++) {","class":"lineCov","hits":"2","order":"4918","possible_hits":"2",},
{"lineNum":"  110","line":"        secp256k1_scalar_sqr(&x112, &x112);","class":"lineCov","hits":"1","order":"4919","possible_hits":"1",},
{"lineNum":"  111","line":"    }"},
{"lineNum":"  112","line":"    secp256k1_scalar_mul(&x112, &x112, &x56);","class":"lineCov","hits":"1","order":"4920","possible_hits":"1",},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"    secp256k1_scalar_sqr(&x126, &x112);","class":"lineCov","hits":"1","order":"4921","possible_hits":"1",},
{"lineNum":"  115","line":"    for (i = 0; i < 13; i++) {","class":"lineCov","hits":"2","order":"4922","possible_hits":"2",},
{"lineNum":"  116","line":"        secp256k1_scalar_sqr(&x126, &x126);","class":"lineCov","hits":"1","order":"4923","possible_hits":"1",},
{"lineNum":"  117","line":"    }"},
{"lineNum":"  118","line":"    secp256k1_scalar_mul(&x126, &x126, &x14);","class":"lineCov","hits":"1","order":"4924","possible_hits":"1",},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"    /* Then accumulate the final result (t starts at x126). */"},
{"lineNum":"  121","line":"    t = &x126;","class":"lineCov","hits":"1","order":"4925","possible_hits":"1",},
{"lineNum":"  122","line":"    for (i = 0; i < 3; i++) {","class":"lineCov","hits":"2","order":"4926","possible_hits":"2",},
{"lineNum":"  123","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4927","possible_hits":"1",},
{"lineNum":"  124","line":"    }"},
{"lineNum":"  125","line":"    secp256k1_scalar_mul(t, t, &u5); /* 101 */","class":"lineCov","hits":"1","order":"4928","possible_hits":"1",},
{"lineNum":"  126","line":"    for (i = 0; i < 4; i++) { /* 0 */","class":"lineCov","hits":"2","order":"4929","possible_hits":"2",},
{"lineNum":"  127","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4930","possible_hits":"1",},
{"lineNum":"  128","line":"    }"},
{"lineNum":"  129","line":"    secp256k1_scalar_mul(t, t, &x3); /* 111 */","class":"lineCov","hits":"1","order":"4931","possible_hits":"1",},
{"lineNum":"  130","line":"    for (i = 0; i < 4; i++) { /* 0 */","class":"lineCov","hits":"2","order":"4932","possible_hits":"2",},
{"lineNum":"  131","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4933","possible_hits":"1",},
{"lineNum":"  132","line":"    }"},
{"lineNum":"  133","line":"    secp256k1_scalar_mul(t, t, &u5); /* 101 */","class":"lineCov","hits":"1","order":"4934","possible_hits":"1",},
{"lineNum":"  134","line":"    for (i = 0; i < 5; i++) { /* 0 */","class":"lineCov","hits":"2","order":"4935","possible_hits":"2",},
{"lineNum":"  135","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4936","possible_hits":"1",},
{"lineNum":"  136","line":"    }"},
{"lineNum":"  137","line":"    secp256k1_scalar_mul(t, t, &u11); /* 1011 */","class":"lineCov","hits":"1","order":"4937","possible_hits":"1",},
{"lineNum":"  138","line":"    for (i = 0; i < 4; i++) {","class":"lineCov","hits":"2","order":"4938","possible_hits":"2",},
{"lineNum":"  139","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4939","possible_hits":"1",},
{"lineNum":"  140","line":"    }"},
{"lineNum":"  141","line":"    secp256k1_scalar_mul(t, t, &u11); /* 1011 */","class":"lineCov","hits":"1","order":"4940","possible_hits":"1",},
{"lineNum":"  142","line":"    for (i = 0; i < 4; i++) { /* 0 */","class":"lineCov","hits":"2","order":"4941","possible_hits":"2",},
{"lineNum":"  143","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4942","possible_hits":"1",},
{"lineNum":"  144","line":"    }"},
{"lineNum":"  145","line":"    secp256k1_scalar_mul(t, t, &x3); /* 111 */","class":"lineCov","hits":"1","order":"4943","possible_hits":"1",},
{"lineNum":"  146","line":"    for (i = 0; i < 5; i++) { /* 00 */","class":"lineCov","hits":"2","order":"4944","possible_hits":"2",},
{"lineNum":"  147","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4945","possible_hits":"1",},
{"lineNum":"  148","line":"    }"},
{"lineNum":"  149","line":"    secp256k1_scalar_mul(t, t, &x3); /* 111 */","class":"lineCov","hits":"1","order":"4946","possible_hits":"1",},
{"lineNum":"  150","line":"    for (i = 0; i < 6; i++) { /* 00 */","class":"lineCov","hits":"2","order":"4947","possible_hits":"2",},
{"lineNum":"  151","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4948","possible_hits":"1",},
{"lineNum":"  152","line":"    }"},
{"lineNum":"  153","line":"    secp256k1_scalar_mul(t, t, &u13); /* 1101 */","class":"lineCov","hits":"1","order":"4949","possible_hits":"1",},
{"lineNum":"  154","line":"    for (i = 0; i < 4; i++) { /* 0 */","class":"lineCov","hits":"2","order":"4950","possible_hits":"2",},
{"lineNum":"  155","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4951","possible_hits":"1",},
{"lineNum":"  156","line":"    }"},
{"lineNum":"  157","line":"    secp256k1_scalar_mul(t, t, &u5); /* 101 */","class":"lineCov","hits":"1","order":"4952","possible_hits":"1",},
{"lineNum":"  158","line":"    for (i = 0; i < 3; i++) {","class":"lineCov","hits":"2","order":"4953","possible_hits":"2",},
{"lineNum":"  159","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4954","possible_hits":"1",},
{"lineNum":"  160","line":"    }"},
{"lineNum":"  161","line":"    secp256k1_scalar_mul(t, t, &x3); /* 111 */","class":"lineCov","hits":"1","order":"4955","possible_hits":"1",},
{"lineNum":"  162","line":"    for (i = 0; i < 5; i++) { /* 0 */","class":"lineCov","hits":"2","order":"4956","possible_hits":"2",},
{"lineNum":"  163","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4957","possible_hits":"1",},
{"lineNum":"  164","line":"    }"},
{"lineNum":"  165","line":"    secp256k1_scalar_mul(t, t, &u9); /* 1001 */","class":"lineCov","hits":"1","order":"4958","possible_hits":"1",},
{"lineNum":"  166","line":"    for (i = 0; i < 6; i++) { /* 000 */","class":"lineCov","hits":"2","order":"4959","possible_hits":"2",},
{"lineNum":"  167","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4960","possible_hits":"1",},
{"lineNum":"  168","line":"    }"},
{"lineNum":"  169","line":"    secp256k1_scalar_mul(t, t, &u5); /* 101 */","class":"lineCov","hits":"1","order":"4961","possible_hits":"1",},
{"lineNum":"  170","line":"    for (i = 0; i < 10; i++) { /* 0000000 */","class":"lineCov","hits":"2","order":"4962","possible_hits":"2",},
{"lineNum":"  171","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4963","possible_hits":"1",},
{"lineNum":"  172","line":"    }"},
{"lineNum":"  173","line":"    secp256k1_scalar_mul(t, t, &x3); /* 111 */","class":"lineCov","hits":"1","order":"4964","possible_hits":"1",},
{"lineNum":"  174","line":"    for (i = 0; i < 4; i++) { /* 0 */","class":"lineCov","hits":"2","order":"4965","possible_hits":"2",},
{"lineNum":"  175","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4966","possible_hits":"1",},
{"lineNum":"  176","line":"    }"},
{"lineNum":"  177","line":"    secp256k1_scalar_mul(t, t, &x3); /* 111 */","class":"lineCov","hits":"1","order":"4967","possible_hits":"1",},
{"lineNum":"  178","line":"    for (i = 0; i < 9; i++) { /* 0 */","class":"lineCov","hits":"2","order":"4968","possible_hits":"2",},
{"lineNum":"  179","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4969","possible_hits":"1",},
{"lineNum":"  180","line":"    }"},
{"lineNum":"  181","line":"    secp256k1_scalar_mul(t, t, &x8); /* 11111111 */","class":"lineCov","hits":"1","order":"4970","possible_hits":"1",},
{"lineNum":"  182","line":"    for (i = 0; i < 5; i++) { /* 0 */","class":"lineCov","hits":"2","order":"4971","possible_hits":"2",},
{"lineNum":"  183","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4972","possible_hits":"1",},
{"lineNum":"  184","line":"    }"},
{"lineNum":"  185","line":"    secp256k1_scalar_mul(t, t, &u9); /* 1001 */","class":"lineCov","hits":"1","order":"4973","possible_hits":"1",},
{"lineNum":"  186","line":"    for (i = 0; i < 6; i++) { /* 00 */","class":"lineCov","hits":"2","order":"4974","possible_hits":"2",},
{"lineNum":"  187","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4975","possible_hits":"1",},
{"lineNum":"  188","line":"    }"},
{"lineNum":"  189","line":"    secp256k1_scalar_mul(t, t, &u11); /* 1011 */","class":"lineCov","hits":"1","order":"4976","possible_hits":"1",},
{"lineNum":"  190","line":"    for (i = 0; i < 4; i++) {","class":"lineCov","hits":"2","order":"4977","possible_hits":"2",},
{"lineNum":"  191","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4978","possible_hits":"1",},
{"lineNum":"  192","line":"    }"},
{"lineNum":"  193","line":"    secp256k1_scalar_mul(t, t, &u13); /* 1101 */","class":"lineCov","hits":"1","order":"4979","possible_hits":"1",},
{"lineNum":"  194","line":"    for (i = 0; i < 5; i++) {","class":"lineCov","hits":"2","order":"4980","possible_hits":"2",},
{"lineNum":"  195","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4981","possible_hits":"1",},
{"lineNum":"  196","line":"    }"},
{"lineNum":"  197","line":"    secp256k1_scalar_mul(t, t, &x2); /* 11 */","class":"lineCov","hits":"1","order":"4982","possible_hits":"1",},
{"lineNum":"  198","line":"    for (i = 0; i < 6; i++) { /* 00 */","class":"lineCov","hits":"2","order":"4983","possible_hits":"2",},
{"lineNum":"  199","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4984","possible_hits":"1",},
{"lineNum":"  200","line":"    }"},
{"lineNum":"  201","line":"    secp256k1_scalar_mul(t, t, &u13); /* 1101 */","class":"lineCov","hits":"1","order":"4985","possible_hits":"1",},
{"lineNum":"  202","line":"    for (i = 0; i < 10; i++) { /* 000000 */","class":"lineCov","hits":"2","order":"4986","possible_hits":"2",},
{"lineNum":"  203","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4987","possible_hits":"1",},
{"lineNum":"  204","line":"    }"},
{"lineNum":"  205","line":"    secp256k1_scalar_mul(t, t, &u13); /* 1101 */","class":"lineCov","hits":"1","order":"4988","possible_hits":"1",},
{"lineNum":"  206","line":"    for (i = 0; i < 4; i++) {","class":"lineCov","hits":"2","order":"4989","possible_hits":"2",},
{"lineNum":"  207","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4990","possible_hits":"1",},
{"lineNum":"  208","line":"    }"},
{"lineNum":"  209","line":"    secp256k1_scalar_mul(t, t, &u9); /* 1001 */","class":"lineCov","hits":"1","order":"4991","possible_hits":"1",},
{"lineNum":"  210","line":"    for (i = 0; i < 6; i++) { /* 00000 */","class":"lineCov","hits":"2","order":"4992","possible_hits":"2",},
{"lineNum":"  211","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4993","possible_hits":"1",},
{"lineNum":"  212","line":"    }"},
{"lineNum":"  213","line":"    secp256k1_scalar_mul(t, t, x); /* 1 */","class":"lineCov","hits":"1","order":"4994","possible_hits":"1",},
{"lineNum":"  214","line":"    for (i = 0; i < 8; i++) { /* 00 */","class":"lineCov","hits":"2","order":"4995","possible_hits":"2",},
{"lineNum":"  215","line":"        secp256k1_scalar_sqr(t, t);","class":"lineCov","hits":"1","order":"4996","possible_hits":"1",},
{"lineNum":"  216","line":"    }"},
{"lineNum":"  217","line":"    secp256k1_scalar_mul(r, t, &x6); /* 111111 */","class":"lineCov","hits":"1","order":"4997","possible_hits":"1",},
{"lineNum":"  218","line":"}","class":"linePartCov","hits":"1","order":"4998","possible_hits":"2",},
{"lineNum":"  219","line":""},
{"lineNum":"  220","line":"SECP256K1_INLINE static int secp256k1_scalar_is_even(const secp256k1_scalar *a) {"},
{"lineNum":"  221","line":"    return !(a->d[0] & 1);"},
{"lineNum":"  222","line":"}"},
{"lineNum":"  223","line":"#endif"},
{"lineNum":"  224","line":""},
{"lineNum":"  225","line":"static void secp256k1_scalar_inverse_var(secp256k1_scalar *r, const secp256k1_scalar *x) {","class":"lineCov","hits":"1","order":"4779","possible_hits":"1",},
{"lineNum":"  226","line":"#if defined(USE_SCALAR_INV_BUILTIN)"},
{"lineNum":"  227","line":"    secp256k1_scalar_inverse(r, x);","class":"lineCov","hits":"1","order":"4780","possible_hits":"1",},
{"lineNum":"  228","line":"#elif defined(USE_SCALAR_INV_NUM)"},
{"lineNum":"  229","line":"    unsigned char b[32];"},
{"lineNum":"  230","line":"    secp256k1_num n, m;"},
{"lineNum":"  231","line":"    secp256k1_scalar t = *x;"},
{"lineNum":"  232","line":"    secp256k1_scalar_get_b32(b, &t);"},
{"lineNum":"  233","line":"    secp256k1_num_set_bin(&n, b, 32);"},
{"lineNum":"  234","line":"    secp256k1_scalar_order_get_num(&m);"},
{"lineNum":"  235","line":"    secp256k1_num_mod_inverse(&n, &n, &m);"},
{"lineNum":"  236","line":"    secp256k1_num_get_bin(b, 32, &n);"},
{"lineNum":"  237","line":"    secp256k1_scalar_set_b32(r, b, NULL);"},
{"lineNum":"  238","line":"    /* Verify that the inverse was computed correctly, without GMP code. */"},
{"lineNum":"  239","line":"    secp256k1_scalar_mul(&t, &t, r);"},
{"lineNum":"  240","line":"    CHECK(secp256k1_scalar_is_one(&t));"},
{"lineNum":"  241","line":"#else"},
{"lineNum":"  242","line":"#error \"Please select scalar inverse implementation\""},
{"lineNum":"  243","line":"#endif"},
{"lineNum":"  244","line":"}","class":"linePartCov","hits":"1","order":"4999","possible_hits":"2",},
{"lineNum":"  245","line":""},
{"lineNum":"  246","line":"#ifdef USE_ENDOMORPHISM"},
{"lineNum":"  247","line":"#if defined(EXHAUSTIVE_TEST_ORDER)"},
{"lineNum":"  248","line":"/**"},
{"lineNum":"  249","line":" * Find k1 and k2 given k, such that k1 + k2 * lambda == k mod n; unlike in the"},
{"lineNum":"  250","line":" * full case we don\'t bother making k1 and k2 be small, we just want them to be"},
{"lineNum":"  251","line":" * nontrivial to get full test coverage for the exhaustive tests. We therefore"},
{"lineNum":"  252","line":" * (arbitrarily) set k2 = k + 5 and k1 = k - k2 * lambda."},
{"lineNum":"  253","line":" */"},
{"lineNum":"  254","line":"static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {"},
{"lineNum":"  255","line":"    *r2 = (*a + 5) % EXHAUSTIVE_TEST_ORDER;"},
{"lineNum":"  256","line":"    *r1 = (*a + (EXHAUSTIVE_TEST_ORDER - *r2) * EXHAUSTIVE_TEST_LAMBDA) % EXHAUSTIVE_TEST_ORDER;"},
{"lineNum":"  257","line":"}"},
{"lineNum":"  258","line":"#else"},
{"lineNum":"  259","line":"/**"},
{"lineNum":"  260","line":" * The Secp256k1 curve has an endomorphism, where lambda * (x, y) = (beta * x, y), where"},
{"lineNum":"  261","line":" * lambda is {0x53,0x63,0xad,0x4c,0xc0,0x5c,0x30,0xe0,0xa5,0x26,0x1c,0x02,0x88,0x12,0x64,0x5a,"},
{"lineNum":"  262","line":" *            0x12,0x2e,0x22,0xea,0x20,0x81,0x66,0x78,0xdf,0x02,0x96,0x7c,0x1b,0x23,0xbd,0x72}"},
{"lineNum":"  263","line":" *"},
{"lineNum":"  264","line":" * \"Guide to Elliptic Curve Cryptography\" (Hankerson, Menezes, Vanstone) gives an algorithm"},
{"lineNum":"  265","line":" * (algorithm 3.74) to find k1 and k2 given k, such that k1 + k2 * lambda == k mod n, and k1"},
{"lineNum":"  266","line":" * and k2 have a small size."},
{"lineNum":"  267","line":" * It relies on constants a1, b1, a2, b2. These constants for the value of lambda above are:"},
{"lineNum":"  268","line":" *"},
{"lineNum":"  269","line":" * - a1 =      {0x30,0x86,0xd2,0x21,0xa7,0xd4,0x6b,0xcd,0xe8,0x6c,0x90,0xe4,0x92,0x84,0xeb,0x15}"},
{"lineNum":"  270","line":" * - b1 =     -{0xe4,0x43,0x7e,0xd6,0x01,0x0e,0x88,0x28,0x6f,0x54,0x7f,0xa9,0x0a,0xbf,0xe4,0xc3}"},
{"lineNum":"  271","line":" * - a2 = {0x01,0x14,0xca,0x50,0xf7,0xa8,0xe2,0xf3,0xf6,0x57,0xc1,0x10,0x8d,0x9d,0x44,0xcf,0xd8}"},
{"lineNum":"  272","line":" * - b2 =      {0x30,0x86,0xd2,0x21,0xa7,0xd4,0x6b,0xcd,0xe8,0x6c,0x90,0xe4,0x92,0x84,0xeb,0x15}"},
{"lineNum":"  273","line":" *"},
{"lineNum":"  274","line":" * The algorithm then computes c1 = round(b1 * k / n) and c2 = round(b2 * k / n), and gives"},
{"lineNum":"  275","line":" * k1 = k - (c1*a1 + c2*a2) and k2 = -(c1*b1 + c2*b2). Instead, we use modular arithmetic, and"},
{"lineNum":"  276","line":" * compute k1 as k - k2 * lambda, avoiding the need for constants a1 and a2."},
{"lineNum":"  277","line":" *"},
{"lineNum":"  278","line":" * g1, g2 are precomputed constants used to replace division with a rounded multiplication"},
{"lineNum":"  279","line":" * when decomposing the scalar for an endomorphism-based point multiplication."},
{"lineNum":"  280","line":" *"},
{"lineNum":"  281","line":" * The possibility of using precomputed estimates is mentioned in \"Guide to Elliptic Curve"},
{"lineNum":"  282","line":" * Cryptography\" (Hankerson, Menezes, Vanstone) in section 3.5."},
{"lineNum":"  283","line":" *"},
{"lineNum":"  284","line":" * The derivation is described in the paper \"Efficient Software Implementation of Public-Key"},
{"lineNum":"  285","line":" * Cryptography on Sensor Networks Using the MSP430X Microcontroller\" (Gouvea, Oliveira, Lopez),"},
{"lineNum":"  286","line":" * Section 4.3 (here we use a somewhat higher-precision estimate):"},
{"lineNum":"  287","line":" * d = a1*b2 - b1*a2"},
{"lineNum":"  288","line":" * g1 = round((2^272)*b2/d)"},
{"lineNum":"  289","line":" * g2 = round((2^272)*b1/d)"},
{"lineNum":"  290","line":" *"},
{"lineNum":"  291","line":" * (Note that \'d\' is also equal to the curve order here because [a1,b1] and [a2,b2] are found"},
{"lineNum":"  292","line":" * as outputs of the Extended Euclidean Algorithm on inputs \'order\' and \'lambda\')."},
{"lineNum":"  293","line":" *"},
{"lineNum":"  294","line":" * The function below splits a in r1 and r2, such that r1 + lambda * r2 == a (mod order)."},
{"lineNum":"  295","line":" */"},
{"lineNum":"  296","line":""},
{"lineNum":"  297","line":"static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {","class":"lineCov","hits":"1","order":"5023","possible_hits":"1",},
{"lineNum":"  298","line":"    secp256k1_scalar c1, c2;"},
{"lineNum":"  299","line":"    static const secp256k1_scalar minus_lambda = SECP256K1_SCALAR_CONST("},
{"lineNum":"  300","line":"        0xAC9C52B3UL, 0x3FA3CF1FUL, 0x5AD9E3FDUL, 0x77ED9BA4UL,"},
{"lineNum":"  301","line":"        0xA880B9FCUL, 0x8EC739C2UL, 0xE0CFC810UL, 0xB51283CFUL"},
{"lineNum":"  302","line":"    );"},
{"lineNum":"  303","line":"    static const secp256k1_scalar minus_b1 = SECP256K1_SCALAR_CONST("},
{"lineNum":"  304","line":"        0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,"},
{"lineNum":"  305","line":"        0xE4437ED6UL, 0x010E8828UL, 0x6F547FA9UL, 0x0ABFE4C3UL"},
{"lineNum":"  306","line":"    );"},
{"lineNum":"  307","line":"    static const secp256k1_scalar minus_b2 = SECP256K1_SCALAR_CONST("},
{"lineNum":"  308","line":"        0xFFFFFFFFUL, 0xFFFFFFFFUL, 0xFFFFFFFFUL, 0xFFFFFFFEUL,"},
{"lineNum":"  309","line":"        0x8A280AC5UL, 0x0774346DUL, 0xD765CDA8UL, 0x3DB1562CUL"},
{"lineNum":"  310","line":"    );"},
{"lineNum":"  311","line":"    static const secp256k1_scalar g1 = SECP256K1_SCALAR_CONST("},
{"lineNum":"  312","line":"        0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00003086UL,"},
{"lineNum":"  313","line":"        0xD221A7D4UL, 0x6BCDE86CUL, 0x90E49284UL, 0xEB153DABUL"},
{"lineNum":"  314","line":"    );"},
{"lineNum":"  315","line":"    static const secp256k1_scalar g2 = SECP256K1_SCALAR_CONST("},
{"lineNum":"  316","line":"        0x00000000UL, 0x00000000UL, 0x00000000UL, 0x0000E443UL,"},
{"lineNum":"  317","line":"        0x7ED6010EUL, 0x88286F54UL, 0x7FA90ABFUL, 0xE4C42212UL"},
{"lineNum":"  318","line":"    );"},
{"lineNum":"  319","line":"    VERIFY_CHECK(r1 != a);"},
{"lineNum":"  320","line":"    VERIFY_CHECK(r2 != a);"},
{"lineNum":"  321","line":"    /* these _var calls are constant time since the shift amount is constant */"},
{"lineNum":"  322","line":"    secp256k1_scalar_mul_shift_var(&c1, a, &g1, 272);","class":"lineCov","hits":"1","order":"5024","possible_hits":"1",},
{"lineNum":"  323","line":"    secp256k1_scalar_mul_shift_var(&c2, a, &g2, 272);","class":"lineCov","hits":"1","order":"5047","possible_hits":"1",},
{"lineNum":"  324","line":"    secp256k1_scalar_mul(&c1, &c1, &minus_b1);","class":"lineCov","hits":"1","order":"5048","possible_hits":"1",},
{"lineNum":"  325","line":"    secp256k1_scalar_mul(&c2, &c2, &minus_b2);","class":"lineCov","hits":"1","order":"5049","possible_hits":"1",},
{"lineNum":"  326","line":"    secp256k1_scalar_add(r2, &c1, &c2);","class":"lineCov","hits":"1","order":"5050","possible_hits":"1",},
{"lineNum":"  327","line":"    secp256k1_scalar_mul(r1, r2, &minus_lambda);","class":"lineCov","hits":"1","order":"5051","possible_hits":"1",},
{"lineNum":"  328","line":"    secp256k1_scalar_add(r1, r1, a);","class":"lineCov","hits":"1","order":"5052","possible_hits":"1",},
{"lineNum":"  329","line":"}","class":"linePartCov","hits":"1","order":"5053","possible_hits":"2",},
{"lineNum":"  330","line":"#endif"},
{"lineNum":"  331","line":"#endif"},
{"lineNum":"  332","line":""},
{"lineNum":"  333","line":"#endif /* SECP256K1_SCALAR_IMPL_H */"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "ser_de-ab20411a83224715", "date" : "2019-06-01 07:50:29", "instrumented" : 120, "covered" : 120,};
var merged_data = [];
